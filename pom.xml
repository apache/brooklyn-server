<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>31</version>
        <relativePath></relativePath> <!-- prevent loading of ../pom.xml as the "parent" -->
    </parent>

    <groupId>org.apache.brooklyn</groupId>
    <artifactId>brooklyn-server</artifactId>
    <version>1.2.0-SNAPSHOT</version>  <!-- BROOKLYN_VERSION -->
    <packaging>pom</packaging>

    <name>Brooklyn Server Root</name>
    <description>
        Brooklyn Server project root, serving as the ancestor POM for all projects --
        declaring versions, profiles, and the modules to build
    </description>
    <url>https://brooklyn.apache.org/</url>
    <inceptionYear>2012</inceptionYear>

    <developers>
        <!-- TODO update with PMC members and committers -->
    </developers>

    <scm>
        <connection>scm:git:https://git-wip-us.apache.org/repos/asf/brooklyn-server.git</connection>
        <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/brooklyn-server.git</developerConnection>
        <url>https://git-wip-us.apache.org/repos/asf?p=brooklyn-server.git</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>JIRA</system>
        <url>https://issues.apache.org/jira/browse/BROOKLYN</url>
    </issueManagement>
    <ciManagement>
        <system>Jenkins</system>
        <url>https://builds.apache.org/view/Brooklyn/job/brooklyn-server-master/</url>
    </ciManagement>
    <mailingLists>
        <mailingList>
            <name>Brooklyn Developer List</name>
            <subscribe>dev-subscribe@brooklyn.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@brooklyn.apache.org</unsubscribe>
            <post>dev@brooklyn.apache.org</post>
            <archive>
                http://mail-archives.apache.org/mod_mbox/brooklyn-dev/
            </archive>
        </mailingList>
    </mailingLists>

    <repositories>
        <repository>
            <id>jclouds-snapshots</id>
            <url>https://repository.apache.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <properties>
        <brooklyn.version>1.2.0-SNAPSHOT</brooklyn.version>  <!-- BROOKLYN_VERSION -->

        <org.osgi.core.version>7.0.0</org.osgi.core.version>

        <!-- Compilation -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependency Configuration -->
        <jclouds.groupId>org.apache.jclouds</jclouds.groupId> <!-- JCLOUDS_GROUPID_VERSION -->

        <!-- Testing Configuration -->
        <includedTestGroups />
        <excludedTestGroups>Integration,Acceptance,Live,Live-sanity,WIP,Broken</excludedTestGroups>
        <surefire.failIfNoSpecifiedTests>false</surefire.failIfNoSpecifiedTests>

        <!-- Dependency Versions -->
        <jclouds.version>2.4.0</jclouds.version> <!-- JCLOUDS_VERSION -->
        <logback.version>1.2.9</logback.version>
        <slf4j.version>1.7.36</slf4j.version>  <!-- used for java.util.logging jul-to-slf4j interception; 2.x is released 2023 but does not provide org.slf4j.spi.SLF4JServiceProvider which is used -->
        <!-- Must match jclouds' version. From jclouds 2.4.0 it is 27 by default but might use any. -->
        <guava.version>32.0.0-jre</guava.version>
        <!--
            This can be different from above and should be used only by Swagger related code.
            Note that some bundles used by Brooklyn will try to bind to the latest version available.
            For example jclouds is sensitive, as might be jackson-datatype-guava (might want 16-20?).
        -->
        <guava-swagger.version>${guava.version}</guava-swagger.version>
        <animal-sniffer.version>1.17</animal-sniffer.version>  <!-- guava version; overridden when pulling in felix -->
        <guice.version>4.2.3</guice.version> <!-- per jclouds -->
        <gson.version>2.8.9</gson.version>   <!-- per jclouds -->

        <failureaccess.version>1.0.1</failureaccess.version>
        <xstream.version>1.4.19</xstream.version>
        <xpp3.servicemix.version>1.1.4c_7</xpp3.servicemix.version>
        <kxml2.servicemix.version>2.3.0_3</kxml2.servicemix.version>
        <jaxb-api-2.2.servicemix.version>2.9.0</jaxb-api-2.2.servicemix.version> <!-- servicemix -->
        <jaxb-api.version>2.3.3</jaxb-api.version> <!-- jaxb and old servicemix - excluded from dependencies -->
        <jaxb-runtime.version>${jaxb-api.version}</jaxb-runtime.version>   <!-- excluded -->
        <activator.servicemix.version>2.9.0</activator.servicemix.version>
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <jakarta.mail.version>1.6.5</jakarta.mail.version> <!-- used by karaf -->
        <!-- double-check downstream projects before changing jackson version -->
        <fasterxml.jackson.version>2.16.1</fasterxml.jackson.version>
        <cxf.version>3.4.10</cxf.version>  <!-- 3.5.7 is the latest using java 8, but untested; 3.6 and 4 use 11; 3.5 and earlier all use snakeyaml 1.x but for our purposes seem to work with 2.x -->
        <httpcomponents.httpclient.version>4.5.13</httpcomponents.httpclient.version> <!-- To match apache-cxf-3.4.10-features.xml -->
        <httpcomponents.httpcore.version>4.4.15</httpcomponents.httpcore.version> <!-- To match cxf -->
        <!-- @deprecated since 0.11 -->
        <httpclient.version>4.5.13</httpclient.version> <!-- kept for compatibility in 0.11.0-SNAPSHOT, remove after -->
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <groovy.version>2.4.21</groovy.version> <!-- 2.4 seems to be an LTS; later versions switch to using a pom not a jar for groovy all, then in 4 to using modules and hosted at apache rather than codehaus; note the groovy-eclipse-complier versions below -->
        <groovy-eclipse-compiler.version>2.9.1-01</groovy-eclipse-compiler.version>  <!-- see https://github.com/groovy/groovy-eclipse/wiki/Groovy-Eclipse-2.9.1-Release-Notes -->
        <groovy-eclipse-batch.version>2.4.21-01</groovy-eclipse-batch.version>
        <snakeyaml.version>2.2</snakeyaml.version> <!-- should match: cxf-parent, jackson-dataformat-yaml; jackson is easy, but cxf have dropped support for java 8 -->
        <snakeyaml.jclouds.version>1.26</snakeyaml.jclouds.version> <!-- jclouds-byon 2.4 imports this; used for exclusion; byon is excluded and that is the only jclouds library using it, so this is fine -->
        <!-- Next version of swagger requires changes to how path mapping and scanner injection are done. -->
        <swagger.version>1.6.2</swagger.version>
        <mx4j.version>3.0.1</mx4j.version>
        <bouncycastle.version>1.72</bouncycastle.version>  <!-- beyond this gives asn1 errors, needs a new dep probably -->
        <eddsa.version>0.3.0</eddsa.version>  <!-- eddsa 0.3.0 needs sun x509 -->
        <sshj.version>0.34.0</sshj.version>  <!-- jclouds 2.4 uses 0.27; 0.32 needs eddsa 0.3.0 -->
        <sshj.asn1.version>0.6.0</sshj.asn1.version>
        <!-- jzlib osgi version is 1.1.3.2, but bundle is 1.1.3_2 ; JClouds 2.2.0 pulls in 1.0.7_1 but is happy with 1.1.3.2 -->
        <jzlib.version>1.1.3_2</jzlib.version>
        <jzlib.osgi.version>1.1.3.2</jzlib.osgi.version>
        <reflections.version>0.9.10</reflections.version>
        <jetty-schemas.version>3.1.M0</jetty-schemas.version>
        <airline.version>0.7</airline.version>
        <freemarker.version>2.3.31</freemarker.version>
        <commons-io.version>2.11.0</commons-io.version>
        <jsonPath.version>2.4.0</jsonPath.version>
        <commons-compress.version>1.21</commons-compress.version>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <geronimo-jms_1.1_spec.version>1.1.1</geronimo-jms_1.1_spec.version>
        <geronimo-jta_1.1_spec.version>1.1.1</geronimo-jta_1.1_spec.version>
        <jtidy.version>r8-20060801</jtidy.version>
        <opendmk_jmxremote_optional_jar.version>1.0-b01-ea</opendmk_jmxremote_optional_jar.version>
        <jopt.version>4.3</jopt.version>
        <jcip-annotations.bundle.version>1.0_2</jcip-annotations.bundle.version>
        <jsr305.bundle.version>3.0.2_1</jsr305.bundle.version>
        <google.findbugs.jsr305.version>2.0.1</google.findbugs.jsr305.version> <!-- only used for pojo build -->
        <javax-servlet.version>3.1.0</javax-servlet.version>
        <javax-servlet-jsp.version>2.0</javax-servlet-jsp.version>
        <xml-apis.version>1.0.b2</xml-apis.version>
        <jsr250-api.version>1.0</jsr250-api.version>
        <javax-inject.version>1</javax-inject.version>
        <aopalliance.version>1.0</aopalliance.version>
        <commons-configuration.version>1.7</commons-configuration.version>
        <commons-lang.version>2.4</commons-lang.version>

        <jakarta.rs-api.version>2.1.6</jakarta.rs-api.version> <!-- bumped from various; using jakarta now; this has better osgi signature; other maps to 2.1.99.b01 ? -->
        <old.javax.rs-api.version>2.1.1</old.javax.rs-api.version>  <!-- use jakarta instead, above -->
        <jax-rs-api.version>${old.javax.rs-api.version}</jax-rs-api.version>  <!-- kept for backwards compatibility, but should definitely not use! -->

        <maxmind.version>2.8.0-rc1</maxmind.version>
        <maxmind-db.version>1.2.1</maxmind-db.version>
        <winrm4j.version>0.12.3</winrm4j.version>  <!-- WINRM4J_VERSION -->
        <felix-osgi-compendium.version>1.4.0</felix-osgi-compendium.version>
        <kubernetes-client.version>6.8.1</kubernetes-client.version>  <!-- 6.9 switches to slf4j v2 which has compatibility issues -->

        <!-- Dependencies shipped with vanilla karaf; update these when we update the karaf version -->
        <karaf.version>4.3.8</karaf.version>
        <karaf.plugin.version>${karaf.version}</karaf.plugin.version>
        <pax-web.version>7.3.27</pax-web.version> <!-- karaf 4.3 -->
        <jetty.version>9.4.49.v20220914</jetty.version> <!-- pax 7.3.27, there is more recent 9.4.50.v20221201 but no pax -->
        <commons-collections.version>3.2.2</commons-collections.version>
        <spifly.version>1.3.2</spifly.version> <!-- 1.3.0 from kubernetes; 1.2.4 from pax-jetty; v1.3.2 from erstwhile jetty feature; but 1.3.2 fixes an NPE bug in 1.3.0 so use it -->
        <jaxb-api.version>2.3.3</jaxb-api.version>
        <spifly.version>1.3.5</spifly.version> <!-- v1.3.2 from jetty feature; v1.2.4 from pax-jetty -->
        <felix.framework.version>6.0.5</felix.framework.version>

        <!-- Transitive dependencies, declared explicitly to avoid version mismatch -->
        <jna.version>5.9.0</jna.version>
        <objenesis.version>2.5</objenesis.version>
        <clojure.version>1.4.0</clojure.version>
        <clj-time.version>0.4.1</clj-time.version>
        <commons-codec.version>1.15</commons-codec.version>
        <log4j.version>1.2.17</log4j.version>
        <commons-logging.version>1.2</commons-logging.version>
        <jsonSmart.version>2.4.10</jsonSmart.version>
        <minidev.accessors-smart.version>2.4.9</minidev.accessors-smart.version>

        <ow2.asm.version.jsonpath>5.2</ow2.asm.version.jsonpath>
          <!-- json-path needs objectweb.asm version 5.2 (<6.0.0), and won't accept a bundleReplacement for a higher one; 
               in addition currently pax-web-core brings in 8.0.1 and aries-proxy 9.0;
               the addition of 5.2 triggers a refresh of the wiring of proxy because asm is an optional dependency
               (even though it's a lower version and it shouldn't);
               and in some weird cases that can cause aries to fail to install blueprints possibly due to too-recent javac byte markers;
               but compiling with reasonable versions should make it all okay -->
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <javax.mail.version>1.4.7</javax.mail.version> <!-- version should align with 'jetty' feature -->
        <jakarta.xml.bind-api.version>2.3.3</jakarta.xml.bind-api.version>
        <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
        <cxf.javax.annotation-api.version>${jakarta.annotation-api.version}</cxf.javax.annotation-api.version> <!-- cxf-specs feature v3.3.9 declares v1.3.5; jetty 9.4.35.v20201120 declares v1.3.2 -->
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version> <!-- cxf-specs feature v3.3.9 declares v1.3.5; jetty 9.4.35.v20201120 declares v1.3.2 -->
        <okio.version>1.15.0</okio.version>

        <!-- Test dependencies -->
        <testng.version>7.3.0</testng.version>
        <mockito.version>2.7.12</mockito.version>
        <assertj.version>3.11.1</assertj.version>
        <cobertura.plugin.version>2.7</cobertura.plugin.version>
        <surefire.version>2.19.1</surefire.version>
        <hamcrest.version>1.1</hamcrest.version>
        <mockwebserver.version>20121111</mockwebserver.version>

        <!-- Test dependencies: clients to connect to deployed entities -->
        <astyanax.version>3.8.0</astyanax.version>
        <jcouchdb.version>0.11.0-1</jcouchdb.version>
        <solr.version>4.7.0</solr.version>
        <zookeeper.version>3.3.4</zookeeper.version>
        <ring-core.version>1.1.5</ring-core.version>

        <!-- Seemingly unused dependencies! -->
        <ivy.version>2.2.0</ivy.version>
        <jline.version>3.21.0</jline.version>
        <jansi.version>1.2.1</jansi.version> <!-- Also shipped in vanilla karaf, v1.17.1 in karaf:4.1.6 -->
        <sleepycat-je.version>5.0.34</sleepycat-je.version>
        <jcommander.version>1.27</jcommander.version>
        <commons-cli.version>1.2</commons-cli.version>

        <!-- Build Tool Versions -->
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <maven-replacer-plugin.version>1.5.2</maven-replacer-plugin.version>
        <nodejs-maven-plugin.version>1.0.3</nodejs-maven-plugin.version>
        <nodejs-maven-binaries.version>0.10.25</nodejs-maven-binaries.version>
        <jasmine-maven-plugin.version>1.3.1.5</jasmine-maven-plugin.version>
        <requirejs-maven-plugin.version>2.0.0</requirejs-maven-plugin.version>
        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <ant.version>1.8.4</ant.version>
        <dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>

        <geronimo-ws-metadata_2.0_spec.version>1.1.3</geronimo-ws-metadata_2.0_spec.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.karaf</groupId>
                <artifactId>karaf</artifactId>
                <version>${karaf.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- BEGIN karaf version overrides -->
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.fusesource.jansi</groupId>
                <artifactId>jansi</artifactId>
                <version>${jansi.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId> <!-- for javax.annotation.Nullable etc -->
                <version>${jakarta.annotation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
                <scope>provided</scope>  <!-- comes from jakarta above -->
            </dependency>

            <dependency>
                <!-- used by jackson, jaxb, etc -->
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <scope>provided</scope>  <!-- comes from jakarta above -->
            </dependency>

            <dependency>
                <!-- TODO does this get pulled in anywhere? or just by karaf? 2.3.3 ends up in karaf lib/jdk9plus
                     whereas (prior to this anyway) 2.3.2 in system even though it isn't in our features -->
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <!-- mostly bundled with java8 (org.xml.sax, org.w3c.dom); some in jakarta xml above (javax.xml.bind);
                     not included in karaf build -->
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <version>${xml-apis.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
                <exclusions>
                    <exclusion>
                        <!-- we use javax annotations instead, so don't pull this in;
                             it only has design time annotations so isn't needed for running -->
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${google.findbugs.jsr305.version}</version>
                <scope>provided</scope>  <!-- at runtime most annotations lost; others should come from jakarta -->
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${google.findbugs.jsr305.version}</version>
                <scope>provided</scope>  <!-- used by airline; most annotations lost, others should come from jakarta -->
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>

            <dependency>
                <!-- despite being defined in karaf's pom, we can't inherit it as they use parameters to -->
                <!-- select the groupId, artifactId and version -->
                <groupId>javax.servlet</groupId> <!-- match servlet.spec.groupId in karaf/pom.xml -->
                <artifactId>javax.servlet-api</artifactId> <!-- match servlet.spec.artifactId in karaf/pom.xml -->
                <version>${javax-servlet.version}</version> <!-- match servlet.spec.version in karaf/pom.xml -->
            </dependency>

            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <!-- this oldest one has to be present for jsonpath; if we need to use a later one we might need to replace jsonpath -->
                <version>${ow2.asm.version.jsonpath}</version>
            </dependency>
            <dependency>
                <groupId>org.jline</groupId> <!-- when removing this, replace uses with org.jline -->
                <artifactId>jline</artifactId>
                <version>${jline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>${felix-osgi-compendium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>framework</artifactId>
                <type>kar</type>
                <version>${karaf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.ops4j.base</groupId>
                        <artifactId>ops4j-base-lang</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.ops4j.base</groupId>
                        <artifactId>ops4j-base-util-property</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>base</artifactId>
                <version>${karaf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.istack</groupId>
                        <artifactId>istack-commons-runtime</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-annotations</artifactId>
                <version>${animal-sniffer.version}</version>
            </dependency>
            <!-- END karaf version overrides -->

            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
                <version>${geronimo-ws-metadata_2.0_spec.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ivy</groupId>
                <artifactId>ivy</artifactId>
                <version>${ivy.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <exclusions>
                    <!-- when pulled in as test dependency it seems to ignore the dependency management definition,
                         giving conflicting versions (4.2.2 from testng vs 4.2.3 used by us) -->
                    <exclusion>
                        <groupId>com.google.inject</groupId>
                        <artifactId>guice</artifactId>
                    </exclusion>
                </exclusions>
                <version>${testng.version}</version>
            </dependency>
            <dependency>
                <groupId>${jclouds.groupId}</groupId>
                <artifactId>jclouds-allcompute</artifactId>
                <version>${jclouds.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>${jclouds.groupId}.driver</groupId>
                <artifactId>jclouds-sshj</artifactId>
                <version>${jclouds.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-launcher</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-security</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.dataformat</groupId>
                        <artifactId>jackson-dataformat-yaml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.datatype</groupId>
                        <artifactId>jackson-datatype-joda</artifactId>
                    </exclusion>

                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-jaxrs</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.dataformat</groupId>
                        <artifactId>jackson-dataformat-xml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.dataformat</groupId>
                        <artifactId>jackson-dataformat-yaml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.jaxrs</groupId>
                        <artifactId>jackson-jaxrs-json-provider</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcomponents.httpcore.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>${jsr250-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax-inject.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpcomponents.httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <classifier>tests</classifier>
                <version>${httpcomponents.httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>aopalliance</groupId>
                <artifactId>aopalliance</artifactId>
                <version>${aopalliance.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.external</groupId>
                <artifactId>opendmk_jmxremote_optional_jar</artifactId>
                <version>${opendmk_jmxremote_optional_jar.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${jopt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>airline</artifactId>
                <version>${airline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.whirr</groupId>
                <artifactId>whirr-hadoop</artifactId>
                <version>${whirr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.whirr</groupId>
                <artifactId>whirr-core</artifactId>
                <version>${whirr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.whirr</groupId>
                <artifactId>whirr-cli</artifactId>
                <version>${whirr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.whirr</groupId>
                <artifactId>whirr-elasticsearch</artifactId>
                <version>${whirr.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hierynomus</groupId>
                <artifactId>sshj</artifactId>
                <version>${sshj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>mx4j</groupId>
                <artifactId>mx4j-tools</artifactId>
                <version>${mx4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.mockwebserver</groupId>
                <artifactId>mockwebserver</artifactId>
                <version>${mockwebserver.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${jsonPath.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${jsonSmart.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>accessors-smart</artifactId>
                <version>${minidev.accessors-smart.version}</version>
            </dependency>
            <dependency>
                <groupId>com.maxmind.geoip2</groupId>
                <artifactId>geoip2</artifactId>
                <version>${maxmind.version}</version>
            </dependency>

            <!-- JAX-RS dependencies-->
            <!--  JAX-RS 2.0 API -->
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jakarta.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${old.javax.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>jsr311-api</artifactId>
                <scope>provided</scope>  <!-- conflicts with javax.ws-rs-api -->
            </dependency>
            <!--  JAX-RS 2.0 Apache CXF Implementation -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-core</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-local</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${kubernetes-client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-client</artifactId>
                <version>${kubernetes-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.framework</artifactId>
                <version>${felix.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>${jclouds.groupId}</groupId>
                <artifactId>jclouds-core</artifactId>
                <version>${jclouds.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cloudsoft.windows</groupId>
                <artifactId>winrm4j</artifactId>
                <version>${winrm4j.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>parent</module>

        <module>api</module>
        <module>camp</module>
        <module>core</module>
        <module>policy</module>

        <module>locations/jclouds</module>
        <module>locations/container</module>

        <module>software/base</module>
        <module>software/winrm</module>

        <module>server-cli</module>
        <module>launcher-common</module>
        <module>launcher</module>
        <module>logging/logback-includes</module>
        <module>logging/logback-xml</module>
        <module>rest/rest-api</module>
        <module>rest/rest-resources</module>
        <module>rest/rest-server</module>
        <module>test-framework</module>
        <module>test-support</module>


        <module>utils/common</module>
        <module>utils/groovy</module>
        <module>utils/jmx/jmxmp-ssl-agent</module>
        <module>utils/jmx/jmxrmi-agent</module>
        <module>utils/test-support</module>
        <module>utils/rest-swagger</module>

        <module>karaf</module>

        <module>utils/rt-felix</module>
    </modules>
</project>
