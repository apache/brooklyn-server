################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# This file temporarily contains boot settings for brooklyn karaf launcher,
# matching some of the command-line options of the previous brooklyn-cli launcher
# (those used during the initialization sequence)
#
# Most of these will migrate to a permanent cfg file, once the components themselves get refactored
# and the configuration options are agreed upon

# Location of the global brooklyn.properties file
#globalBrooklynPropertiesFile=~/.brooklyn/brooklyn.properties

# Location of the local brooklyn.properties file, normally specified at the cli. Overrides properties from the global set.
#localBrooklynPropertiesFile=

# Location of the default catalog.bom
default.catalog.location=${karaf.etc}/default.catalog.bom

# Ignore catalog subsystem failures during startup (default is to continue, so errors can be viewed via the API)
#ignoreCatalogErrors=true

# Ignore persistence/HA subsystem failures during startup (default is to continue, so errors can be viewed via the API)
#ignorePersistenceErrors=true

# The high availability mode. Possible values are:
# - DISABLED: management node works in isolation - will not cooperate with any other standby/master nodes in management plane;
# - AUTO: will look for other management nodes, and will allocate itself as standby or master based on other nodes' states;
# - MASTER: will startup as master - if there is already a master then fails immediately;
# - STANDBY: will start up as lukewarm standby with no state - if there is not already a master then fails immediately,
#   and if there is a master which subsequently fails, this node can promote itself;
# - HOT_STANDBY: will start up as hot standby in read-only mode - if there is not already a master then fails immediately,
#   and if there is a master which subseuqently fails, this node can promote itself;
# - HOT_BACKUP: will start up as hot backup in read-only mode - no master is required, and this node will not become a master
#highAvailabilityMode=DISABLED

# The persistence mode. Possible values are:
# - AUTO: will rebind to any existing state, or start up fresh if no state;
# - DISABLED: will not read or persist any state;
# - REBIND: will rebind to the existing state, or fail if no state available;
# - CLEAN: will start up fresh (removing any existing state)
#persistMode=AUTO

# The directory to read/write persisted state (or container name if using an object store)
#persistenceDir=

# The location spec for an object store to read/write persisted state
#persistenceLocation=

# Periodic read-only rebind
#persistPeriod=1s
